#import  "./ProjectMembers.gql"
#import "./ProjectGallery.gql"
#import "./ProjectFeature.gql"
#import "./ProjectAwards.gql"
#import "./ProjectSubmit.gql"
#import "./ProjectReactions.gql"
#import "./SlugPicker.gql"

fragment ProjectDetailsFragment on ShowcaseProject {
  id
  name
  type
  description
  priorExperience
  challengesEncountered
  codeLink
  viewLink
  featured
  joinCode
  tags
  ...SlugPicker
  eventGroup {
    id
    title
  }
  region {
    webname
    name
  }
  eventId
  ...ProjectReactionsFragment
  media {
    coverImage: image(fillBlur: true, strategy: FILL, height: 600, width: 1400)
    type
    topic
    ...ProjectGalleryFragment
  }
  awards {
    ...ProjectAwardFragment
  }
  ...ProjectSubmitFragment
}

fragment ProjectDetailsWithMembersFragment on ShowcaseProject {
  ...ProjectDetailsFragment
  members {
    ...ProjectMembersFragment
  }
}

mutation ProjectEditName ($projectId: String!, $name: String!) {
  showcase {
    editProject(id: $projectId, project: { name: $name }) {
      id
    }
  }
}

mutation ProjectEditType ($projectId: String!, $type: ShowcaseProjectType!) {
  showcase {
    editProject(id: $projectId, project: { type: $type }) {
      id
    }
  }
}

mutation ProjectEditDescription ($projectId: String!, $description: String) {
  showcase {
    editProject(id: $projectId, project: { description: $description }) {
      id
    }
  }
}

mutation ProjectEditPriorExperience ($projectId: String!, $priorExperience: String) {
  showcase {
    editProject(id: $projectId, project: { priorExperience: $priorExperience }) {
      id
    }
  }
}

mutation ProjectEditChallengesEncountered ($projectId: String!, $challengesEncountered: String) {
  showcase {
    editProject(id: $projectId, project: { challengesEncountered: $challengesEncountered }) {
      id
    }
  }
}

mutation ProjectEditCodeLink ($projectId: String!, $codeLink: String) {
  showcase {
    editProject(id: $projectId, project: { codeLink: $codeLink }) {
      id
    }
  }
}

mutation ProjectEditViewLink ($projectId: String!, $viewLink: String) {
  showcase {
    editProject(id: $projectId, project: { viewLink: $viewLink }) {
      id
    }
  }
}
